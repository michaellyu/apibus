worker_processes 1;
error_log logs/error.log;
events {
    worker_connections 1024;
}
http {
    server {
        listen 8080;
        lua_code_cache off;
        root ./public;
        location /apis/apibus {
            default_type "application/json; charset=utf-8";
            content_by_lua_file apis/apibus.lua;
        }
        location /apis/one {
            default_type application/json;
            content_by_lua '
                local cjson = require "cjson.safe";
                ngx.say(cjson.encode({status = 1, data = {1, 2, 3}}));
            ';
        }
        location /apis/two {
            default_type application/json;
            content_by_lua '
                local cjson = require "cjson.safe";
                ngx.say(cjson.encode({status = 1, data = ngx.var.arg_arg}));
            ';
        }
        location /apis/three {
            default_type application/json;
            content_by_lua '
                throw error;
            ';
        }
        location /apis/four {
            default_type application/json;
            content_by_lua '
                local cjson = require "cjson.safe";
                ngx.req.read_body();
                local post_args = ngx.req.get_post_args();
                ngx.say(cjson.encode({status = 1, data = post_args}));
            ';
        }
    }                                                                                                                        
}
